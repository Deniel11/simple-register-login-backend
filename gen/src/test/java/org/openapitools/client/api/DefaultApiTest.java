/*
 * simple_register_login API
 * simple_register_login API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AuthenticationRequestDTO;
import org.openapitools.client.model.AuthenticationResponseDTO;
import org.openapitools.client.model.MessageDTO;
import org.openapitools.client.model.RegisteredUserDTO;
import org.openapitools.client.model.RegisteredUserDTOList;
import org.openapitools.client.model.UpdateUserDTO;
import org.openapitools.client.model.UserDTO;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Ignore
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    
    /**
     * POST api/user/login
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createAuthenticationTokenTest() throws ApiException {
        AuthenticationRequestDTO authenticationRequestDTO = null;
        AuthenticationResponseDTO response = api.createAuthenticationToken(authenticationRequestDTO);

        // TODO: test validations
    }
    
    /**
     * GET api/user
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getOwnUserTest() throws ApiException {
        RegisteredUserDTO response = api.getOwnUser();

        // TODO: test validations
    }
    
    /**
     * GET api/user/{id}
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getUserTest() throws ApiException {
        Long id = null;
        RegisteredUserDTO response = api.getUser(id);

        // TODO: test validations
    }
    
    /**
     * GET api/user/users
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getUsersTest() throws ApiException {
        RegisteredUserDTOList response = api.getUsers();

        // TODO: test validations
    }
    
    /**
     * POST api/user/registration
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void registrationTest() throws ApiException {
        UserDTO userDTO = null;
        RegisteredUserDTO response = api.registration(userDTO);

        // TODO: test validations
    }
    
    /**
     * PUT api/user/{id}
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateUserTest() throws ApiException {
        Long id = null;
        UpdateUserDTO updateUserDTO = null;
        RegisteredUserDTO response = api.updateUser(id, updateUserDTO);

        // TODO: test validations
    }
    
    /**
     * GET api/user/verify-email
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void verifyEmailAddressTest() throws ApiException {
        String token = null;
        MessageDTO response = api.verifyEmailAddress(token);

        // TODO: test validations
    }
    
}
